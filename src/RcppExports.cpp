// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "../inst/include/rcppglpk.h"
#include <Rcpp.h>

using namespace Rcpp;

// glpk_example
List glpk_example(const NumericVector& obj, const NumericMatrix& subj_lhs, const NumericVector& subj_rhs, const IntegerVector& cols_bnds_type, const NumericVector& cols_bnds_lb, const NumericVector& cols_bnds_ub, const IntegerVector& rows_bnds_type, const NumericVector& rows_bnds_lb, const NumericVector& rows_bnds_ub, int DIR, const StringVector pname);
RcppExport SEXP _rcppglpk_glpk_example(SEXP objSEXP, SEXP subj_lhsSEXP, SEXP subj_rhsSEXP, SEXP cols_bnds_typeSEXP, SEXP cols_bnds_lbSEXP, SEXP cols_bnds_ubSEXP, SEXP rows_bnds_typeSEXP, SEXP rows_bnds_lbSEXP, SEXP rows_bnds_ubSEXP, SEXP DIRSEXP, SEXP pnameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type obj(objSEXP);
    Rcpp::traits::input_parameter< const NumericMatrix& >::type subj_lhs(subj_lhsSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type subj_rhs(subj_rhsSEXP);
    Rcpp::traits::input_parameter< const IntegerVector& >::type cols_bnds_type(cols_bnds_typeSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type cols_bnds_lb(cols_bnds_lbSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type cols_bnds_ub(cols_bnds_ubSEXP);
    Rcpp::traits::input_parameter< const IntegerVector& >::type rows_bnds_type(rows_bnds_typeSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type rows_bnds_lb(rows_bnds_lbSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type rows_bnds_ub(rows_bnds_ubSEXP);
    Rcpp::traits::input_parameter< int >::type DIR(DIRSEXP);
    Rcpp::traits::input_parameter< const StringVector >::type pname(pnameSEXP);
    rcpp_result_gen = Rcpp::wrap(glpk_example(obj, subj_lhs, subj_rhs, cols_bnds_type, cols_bnds_lb, cols_bnds_ub, rows_bnds_type, rows_bnds_lb, rows_bnds_ub, DIR, pname));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rcppglpk_glpk_example", (DL_FUNC) &_rcppglpk_glpk_example, 11},
    {NULL, NULL, 0}
};

RcppExport void R_init_rcppglpk(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
